trigger RejectDoubleBooking on Sessionn_Speaker__c (before insert, before update) {
    
    for(Sessionn_Speaker__c sessionSpeaker : trigger.new){
        
        //Retrive session information including session date and time
        Session__c session = [
            	SELECT Id, Session_Date__c 
            	FROM Session__c
            	WHERE Id=:sessionSpeaker.Session__c
        ];
        
        //Retrive conflicts: other assignments for that speaker at the same time
	List<Sessionn_Speaker__c> conflicts = [
        SELECT Id FROM Sessionn_Speaker__c
        WHERE Speaker__c = :sessionSpeaker.Speaker__c
        AND Session__r.Session_Date__c = :session.Session_Date__c
    ];
        //if conflicts exist, add ann error(reject the database operation)
        if(!conflicts.isEmpty()){
            sessionSpeaker.addError('The Speaker is already booked at that time');
        }
    }    	
}
